//package main.ui;
//
//import main.model.pos.CarriedItems;
//import main.model.pos.Item;
//import main.model.pos.Transaction;
//import main.model.system.ListOfUsers;
//import main.model.system.Login;
//
//import javax.swing.*;
//import java.awt.*;
//import java.awt.event.ActionEvent;
//import java.awt.event.ActionListener;
//
//public class display {
//    JFrame frame = new JFrame("display");
//    public CarriedItems carries = new CarriedItems();
//    public static Transaction transac = new Transaction();
//    private JPanel panel = new JPanel();
//    private JList<String> list;
//    private JButton button1;
//    private JTextField textField1;
//    private JButton button2;
//    private JLabel totalLabel;
//    private JLabel noticeLabel;
//    private JButton cancelOrderButton;
//    static DefaultListModel<String> model = new DefaultListModel<>();
//    private Sys system = new Sys();
//    private static Login currentUser;
//    static ListOfUsers users;
//
//
//    public display() {
//
//        //System
//        button1.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
////                String a = textField1.getText();
////                carries.addItem(a);
////                textField1.setText("");
//                System.out.println(currentUser);
//                Sys.runSys(currentUser, carries, users);
//            }
//        });
//        textField1.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                String a = textField1.getText();
//                System.out.println(a);
//                noticeLabel.setText("");
//                try {
//                    Item b = carries.findItem(a);
//                    textField1.setText("");
//                    transac.cart.add(b);
//                    if (b.sellByWeight) {//if item is sell by weight
//                        SellByWeight.SBW(transac, b, list, totalLabel, model);
//                    } else {
//                        model.addElement(b.getDescription());
//                        list.setModel(model);
//                        transac.amount.add(1.0);
//                        transac.addTotal(b.getPrice());
//                        String f = toMoney(transac.getTotal());
//                        totalLabel.setText(f);
//                    }
//                } catch (NullPointerException f) { //change
//                    noticeLabel.setText("Product not found");
//                    System.out.println("Product not found");
//                }
//            }
//        });
//        button2.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                Total.runTotal(transac, list, totalLabel, model);
//            }
//        });
//    }
//
//    public static void runPOS(Login currentUser1, ListOfUsers users1) {
//        currentUser = currentUser1;
//        users = users1;
//        System.out.println(currentUser);
//        JFrame frame = new JFrame("display");
//        frame.setContentPane(new display().panel);
//        frame.setDefaultCloseOperation(frame.EXIT_ON_CLOSE);
//        frame.pack();
//        frame.setVisible(true);
//
//
//        display test = new display();
//        System.out.println(model);
//        test.list.setModel(model);
////        test.list = new JList(model);
//        frame.setContentPane(test.panel);
//        test.list.updateUI();
//        test.list.setCellRenderer(new DefaultListCellRenderer());
//        test.list.setVisible(true);
////        duck.writeFn();
//
//    }
//
//    public void update() {
//        list.setModel(model);
//    }
//
//    public static void again() {
//        transac = new Transaction();
//        model = new DefaultListModel<>();
//    }
//
//
//    public static String toMoney(int a) {
//        String f = Integer.toString(a);
//        return f.substring(0, f.length() - 2) + "." + f.substring(f.length() - 2, f.length());
//    }
//
//
//    {
//// GUI initializer generated by IntelliJ IDEA GUI Designer
//// >>> IMPORTANT!! <<<
//// DO NOT EDIT OR ADD ANY CODE HERE!
//        $$$setupUI$$$();
//    }
//
//    /**
//     * Method generated by IntelliJ IDEA GUI Designer
//     * >>> IMPORTANT!! <<<
//     * DO NOT edit this method OR call it in your code!
//     *
//     * @noinspection ALL
//     */
//    private void $$$setupUI$$$() {
//        panel = new JPanel();
//        panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(6, 3, new Insets(0, 0, 0, 0), -1, -1, true,
// true));
//        panel.setBackground(new Color(-13794952));
//        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
//        panel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core
// .GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigne
// r.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
//        textField1 = new JTextField();
//        panel.add(textField1, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 1, com.intellij.uiDesigner.co
// re.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigne
// r.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, ne
// w Dimension(150, -1), null, 0, false));
//        final JLabel label1 = new JLabel();
//        label1.setText("Total:");
//        panel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 1, com.intellij.uiDesigner.core.
// GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.
// GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
// false));
//        totalLabel = new JLabel();
//        totalLabel.setText("0.00");
//        panel.add(totalLabel, new com.intellij.uiDesigner.core.GridConstraints(5, 1, 1, 1, com.intellij.uiDesigner.co
// re.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core
// .GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null,
// 0, false));
//        noticeLabel = new JLabel();
//        noticeLabel.setText("");
//        panel.add(noticeLabel, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.
// core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.co
// re.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null
// , 0, false));
//        list = new JList();
//        list.setBackground(new Color(-1444612));
//        list.setEnabled(false);
//        list.setFocusable(false);
//        list.setForeground(new Color(-5889740));
//        final DefaultListModel defaultListModel1 = new DefaultListModel();
//        list.setModel(defaultListModel1);
//        panel.add(list, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 4, 2, com.intellij.uiDesigner.core.Gr
// idConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.G
// ridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(
// 150, 50), null, 0, false));
//        button2 = new JButton();
//        button2.setText("Total");
//        panel.add(button2, new com.intellij.uiDesigner.core.GridConstraints(3, 2, 1, 1, com.intellij.uiDesigner.core.
// GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner
// .core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com
// .intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
//        cancelOrderButton = new JButton();
//        cancelOrderButton.setText("Cancel Order");
//        panel.add(cancelOrderButton, new com.intellij.uiDesigner.core.GridConstraints(4, 2, 1, 1, com.intellij.uiDesi
// gner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.
// uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_
// GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
//        button1 = new JButton();
//        button1.setText("System");
//        panel.add(button1, new com.intellij.uiDesigner.core.GridConstraints(5, 2, 1, 1, com.intellij.uiDesigner.core.
// GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner
// .core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.
// intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
//    }
//
//    /**
//     * @noinspection ALL
//     */
//    public JComponent $$$getRootComponent$$$() {
//        return panel;
//    }
//}